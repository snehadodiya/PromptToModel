{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\OneDrive\\\\Desktop\\\\mml\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Container, Typography } from '@mui/material';\nimport FileUpload from './components/FileUpload';\nimport PromptInput from './components/PromptInput';\nimport DownloadZipButton from './components/DownloadZipButton';\nimport Notebook from './components/Notebook';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [sessionId, setSessionId] = useState('');\n  const [headers, setHeaders] = useState([]);\n  const [steps, setSteps] = useState([]);\n  const handleUploadSuccess = ({\n    sessionId,\n    columns\n  }) => {\n    setSessionId(sessionId);\n    setHeaders(columns);\n    setSteps([]); // reset notebook\n  };\n  const handlePromptSubmit = async prompt => {\n    if (!sessionId || headers.length === 0) return;\n    const response = await fetch('http://localhost:5000/generate-code', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        prompt,\n        headers,\n        sessionId\n      })\n    });\n    const data = await response.json();\n    if (data.code) {\n      // You can extend this with actual code execution result later\n      const output = await fetch(`http://localhost:5000/sessions/${sessionId}/output_step_${data.step}.txt`).then(res => res.ok ? res.text() : null).catch(() => null);\n      setSteps(prev => [...prev, {\n        prompt,\n        code: data.code,\n        output: output ? {\n          type: 'text',\n          content: output\n        } : null\n      }]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    sx: {\n      mt: 5\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"\\uD83E\\uDDE0 Prompt2LLM Notebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FileUpload, {\n      onSuccess: handleUploadSuccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), sessionId && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(PromptInput, {\n        onSubmit: handlePromptSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DownloadZipButton, {\n        sessionId: sessionId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Notebook, {\n        steps: steps\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"URt+x2iJk8XRB9Xs84U33zT5wFE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Container","Typography","FileUpload","PromptInput","DownloadZipButton","Notebook","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","sessionId","setSessionId","headers","setHeaders","steps","setSteps","handleUploadSuccess","columns","handlePromptSubmit","prompt","length","response","fetch","method","body","JSON","stringify","data","json","code","output","step","then","res","ok","text","catch","prev","type","content","sx","mt","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","onSuccess","onSubmit","_c","$RefreshReg$"],"sources":["C:/Users/DELL/OneDrive/Desktop/mml/client/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Container, Typography } from '@mui/material';\r\nimport FileUpload from './components/FileUpload';\r\nimport PromptInput from './components/PromptInput';\r\nimport DownloadZipButton from './components/DownloadZipButton';\r\nimport Notebook from './components/Notebook';\r\n\r\nfunction App() {\r\n  const [sessionId, setSessionId] = useState('');\r\n  const [headers, setHeaders] = useState([]);\r\n  const [steps, setSteps] = useState([]);\r\n\r\n  const handleUploadSuccess = ({ sessionId, columns }) => {\r\n    setSessionId(sessionId);\r\n    setHeaders(columns);\r\n    setSteps([]); // reset notebook\r\n  };\r\n\r\n  const handlePromptSubmit = async (prompt) => {\r\n    if (!sessionId || headers.length === 0) return;\r\n\r\n    const response = await fetch('http://localhost:5000/generate-code', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ prompt, headers, sessionId }),\r\n    });\r\n\r\n    const data = await response.json();\r\n\r\n    if (data.code) {\r\n      // You can extend this with actual code execution result later\r\n      const output = await fetch(`http://localhost:5000/sessions/${sessionId}/output_step_${data.step}.txt`)\r\n        .then(res => res.ok ? res.text() : null)\r\n        .catch(() => null);\r\n\r\n      setSteps(prev => [...prev, {\r\n        prompt,\r\n        code: data.code,\r\n        output: output ? { type: 'text', content: output } : null,\r\n      }]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container sx={{ mt: 5 }}>\r\n      <Typography variant=\"h4\" gutterBottom>ðŸ§  Prompt2LLM Notebook</Typography>\r\n\r\n      <FileUpload onSuccess={handleUploadSuccess} />\r\n      {sessionId && (\r\n        <>\r\n          <PromptInput onSubmit={handlePromptSubmit} />\r\n          <DownloadZipButton sessionId={sessionId} />\r\n          <Notebook steps={steps} />\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}