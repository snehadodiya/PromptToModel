{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\OneDrive\\\\Desktop\\\\mml\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// client/src/App.js\nimport React, { useState } from 'react';\nimport { Container, Typography } from '@mui/material';\nimport FileUpload from './components/FileUpload';\nimport PromptInput from './components/PromptInput';\nimport DownloadZipButton from './components/DownloadZipButton';\nimport Notebook from './components/Notebook';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [sessionId, setSessionId] = useState('');\n  const [headers, setHeaders] = useState([]);\n  const [steps, setSteps] = useState([]);\n\n  // Called when dataset is uploaded\n  const handleUploadSuccess = ({\n    sessionId,\n    columns\n  }) => {\n    setSessionId(sessionId);\n    setHeaders(columns);\n    setSteps([]); // reset notebook steps\n  };\n\n  // Called when user submits a prompt\n  const handlePromptSubmit = async prompt => {\n    if (!sessionId || headers.length === 0) return;\n    try {\n      const response = await fetch('http://localhost:5000/generate-code', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          prompt,\n          headers,\n          sessionId\n        })\n      });\n      const data = await response.json();\n      if (data.code) {\n        const stepNum = data.step;\n\n        // Try loading text output\n        const textOutput = await fetch(`http://localhost:5000/sessions/${sessionId}/output_step_${stepNum}.txt`).then(res => res.ok ? res.text() : null).catch(() => null);\n\n        // Try loading image output\n        const imageUrl = `http://localhost:5000/sessions/${sessionId}/output_step_${stepNum}.png`;\n        const imageExists = await fetch(imageUrl).then(res => res.ok).catch(() => false);\n        const output = imageExists ? {\n          type: 'image',\n          content: imageUrl\n        } : textOutput ? {\n          type: 'text',\n          content: textOutput\n        } : null;\n\n        // Add step to notebook\n        setSteps(prev => [...prev, {\n          prompt,\n          code: data.code,\n          output\n        }]);\n      }\n    } catch (error) {\n      console.error('Error generating code:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    sx: {\n      mt: 5\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"\\uD83E\\uDDE0 Prompt2LLM Notebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FileUpload, {\n      onSuccess: handleUploadSuccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), sessionId && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(PromptInput, {\n        onSubmit: handlePromptSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DownloadZipButton, {\n        sessionId: sessionId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Notebook, {\n        steps: steps\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"URt+x2iJk8XRB9Xs84U33zT5wFE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Container","Typography","FileUpload","PromptInput","DownloadZipButton","Notebook","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","sessionId","setSessionId","headers","setHeaders","steps","setSteps","handleUploadSuccess","columns","handlePromptSubmit","prompt","length","response","fetch","method","body","JSON","stringify","data","json","code","stepNum","step","textOutput","then","res","ok","text","catch","imageUrl","imageExists","output","type","content","prev","error","console","sx","mt","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","onSuccess","onSubmit","_c","$RefreshReg$"],"sources":["C:/Users/DELL/OneDrive/Desktop/mml/client/src/App.js"],"sourcesContent":["// client/src/App.js\r\nimport React, { useState } from 'react';\r\nimport { Container, Typography } from '@mui/material';\r\nimport FileUpload from './components/FileUpload';\r\nimport PromptInput from './components/PromptInput';\r\nimport DownloadZipButton from './components/DownloadZipButton';\r\nimport Notebook from './components/Notebook';\r\n\r\nfunction App() {\r\n  const [sessionId, setSessionId] = useState('');\r\n  const [headers, setHeaders] = useState([]);\r\n  const [steps, setSteps] = useState([]);\r\n\r\n  // Called when dataset is uploaded\r\n  const handleUploadSuccess = ({ sessionId, columns }) => {\r\n    setSessionId(sessionId);\r\n    setHeaders(columns);\r\n    setSteps([]); // reset notebook steps\r\n  };\r\n\r\n  // Called when user submits a prompt\r\n  const handlePromptSubmit = async (prompt) => {\r\n    if (!sessionId || headers.length === 0) return;\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/generate-code', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ prompt, headers, sessionId }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (data.code) {\r\n        const stepNum = data.step;\r\n\r\n        // Try loading text output\r\n        const textOutput = await fetch(`http://localhost:5000/sessions/${sessionId}/output_step_${stepNum}.txt`)\r\n          .then(res => (res.ok ? res.text() : null))\r\n          .catch(() => null);\r\n\r\n        // Try loading image output\r\n        const imageUrl = `http://localhost:5000/sessions/${sessionId}/output_step_${stepNum}.png`;\r\n        const imageExists = await fetch(imageUrl)\r\n          .then(res => res.ok)\r\n          .catch(() => false);\r\n\r\n        const output = imageExists\r\n          ? { type: 'image', content: imageUrl }\r\n          : textOutput\r\n          ? { type: 'text', content: textOutput }\r\n          : null;\r\n\r\n        // Add step to notebook\r\n        setSteps(prev => [\r\n          ...prev,\r\n          {\r\n            prompt,\r\n            code: data.code,\r\n            output,\r\n          },\r\n        ]);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error generating code:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container sx={{ mt: 5 }}>\r\n      <Typography variant=\"h4\" gutterBottom>ðŸ§  Prompt2LLM Notebook</Typography>\r\n\r\n      <FileUpload onSuccess={handleUploadSuccess} />\r\n\r\n      {sessionId && (\r\n        <>\r\n          <PromptInput onSubmit={handlePromptSubmit} />\r\n          <DownloadZipButton sessionId={sessionId} />\r\n          <Notebook steps={steps} />\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}