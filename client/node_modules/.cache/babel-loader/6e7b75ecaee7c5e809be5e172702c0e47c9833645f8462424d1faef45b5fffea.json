{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\OneDrive\\\\Desktop\\\\mml\\\\client\\\\src\\\\components\\\\FileUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Button, Box, Typography } from '@mui/material';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUpload = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [response, setResponse] = useState('');\n  const handleChange = e => {\n    setFile(e.target.files[0]);\n  };\n  const handleUpload = async () => {\n    if (!file) return;\n    const formData = new FormData();\n    formData.append('file', file);\n    try {\n      const res = await axios.post('http://localhost:5000/upload', formData);\n      setResponse(res.data.message || 'File uploaded successfully!');\n    } catch (err) {\n      setResponse('Upload failed.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      children: \"Upload CSV/XLS file\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".csv,.xlsx\",\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleUpload,\n      sx: {\n        mt: 2\n      },\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), response && /*#__PURE__*/_jsxDEV(Typography, {\n      sx: {\n        mt: 2\n      },\n      children: response\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(FileUpload, \"5nmD+JPEeeQ1fJf7bVMrARnb9uU=\");\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","Button","Box","Typography","axios","jsxDEV","_jsxDEV","FileUpload","_s","file","setFile","response","setResponse","handleChange","e","target","files","handleUpload","formData","FormData","append","res","post","data","message","err","sx","p","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","color","onClick","mt","_c","$RefreshReg$"],"sources":["C:/Users/DELL/OneDrive/Desktop/mml/client/src/components/FileUpload.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Button, Box, Typography } from '@mui/material';\r\nimport axios from 'axios';\r\n\r\nconst FileUpload = () => {\r\n  const [file, setFile] = useState(null);\r\n  const [response, setResponse] = useState('');\r\n\r\n  const handleChange = (e) => {\r\n    setFile(e.target.files[0]);\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (!file) return;\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n\r\n    try {\r\n      const res = await axios.post('http://localhost:5000/upload', formData);\r\n      setResponse(res.data.message || 'File uploaded successfully!');\r\n    } catch (err) {\r\n      setResponse('Upload failed.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ p: 3 }}>\r\n      <Typography variant=\"h6\">Upload CSV/XLS file</Typography>\r\n      <input type=\"file\" accept=\".csv,.xlsx\" onChange={handleChange} />\r\n      <Button variant=\"contained\" color=\"primary\" onClick={handleUpload} sx={{ mt: 2 }}>\r\n        Upload\r\n      </Button>\r\n      {response && <Typography sx={{ mt: 2 }}>{response}</Typography>}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default FileUpload;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,EAAEC,GAAG,EAAEC,UAAU,QAAQ,eAAe;AACvD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMa,YAAY,GAAIC,CAAC,IAAK;IAC1BJ,OAAO,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAC5B,CAAC;EAED,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI,CAACR,IAAI,EAAE;IACX,MAAMS,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEX,IAAI,CAAC;IAE7B,IAAI;MACF,MAAMY,GAAG,GAAG,MAAMjB,KAAK,CAACkB,IAAI,CAAC,8BAA8B,EAAEJ,QAAQ,CAAC;MACtEN,WAAW,CAACS,GAAG,CAACE,IAAI,CAACC,OAAO,IAAI,6BAA6B,CAAC;IAChE,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZb,WAAW,CAAC,gBAAgB,CAAC;IAC/B;EACF,CAAC;EAED,oBACEN,OAAA,CAACJ,GAAG;IAACwB,EAAE,EAAE;MAAEC,CAAC,EAAE;IAAE,CAAE;IAAAC,QAAA,gBAChBtB,OAAA,CAACH,UAAU;MAAC0B,OAAO,EAAC,IAAI;MAAAD,QAAA,EAAC;IAAmB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eACzD3B,OAAA;MAAO4B,IAAI,EAAC,MAAM;MAACC,MAAM,EAAC,YAAY;MAACC,QAAQ,EAAEvB;IAAa;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjE3B,OAAA,CAACL,MAAM;MAAC4B,OAAO,EAAC,WAAW;MAACQ,KAAK,EAAC,SAAS;MAACC,OAAO,EAAErB,YAAa;MAACS,EAAE,EAAE;QAAEa,EAAE,EAAE;MAAE,CAAE;MAAAX,QAAA,EAAC;IAElF;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACRtB,QAAQ,iBAAIL,OAAA,CAACH,UAAU;MAACuB,EAAE,EAAE;QAAEa,EAAE,EAAE;MAAE,CAAE;MAAAX,QAAA,EAAEjB;IAAQ;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5D,CAAC;AAEV,CAAC;AAACzB,EAAA,CA/BID,UAAU;AAAAiC,EAAA,GAAVjC,UAAU;AAiChB,eAAeA,UAAU;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}