{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\OneDrive\\\\Desktop\\\\mml\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport FileUpload from './FileUpload';\nimport PromptInput from './components/';\nimport { Container, Typography, Paper } from '@mui/material';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [headers, setHeaders] = useState([]);\n  const [generatedCode, setGeneratedCode] = useState('');\n  const handlePromptSubmit = async prompt => {\n    try {\n      const res = await axios.post('http://localhost:5000/generate-code', {\n        prompt,\n        headers\n      });\n      setGeneratedCode(res.data.code || 'No code returned.');\n    } catch (err) {\n      console.error('Error generating code:', err);\n      setGeneratedCode('Error generating code.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      sx: {\n        mt: 4,\n        mb: 2\n      },\n      children: \"\\uD83E\\uDDE0 Prompt2LLM \\u2013 ML Code Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FileUpload, {\n      onHeadersExtracted: setHeaders\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PromptInput, {\n      onSubmit: handlePromptSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), generatedCode && /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        mt: 4,\n        p: 3,\n        whiteSpace: 'pre-wrap',\n        fontFamily: 'monospace'\n      },\n      children: generatedCode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"aFDQS14Hce7Vw4W4Bcn6cWtRmNc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","FileUpload","PromptInput","Container","Typography","Paper","axios","jsxDEV","_jsxDEV","App","_s","headers","setHeaders","generatedCode","setGeneratedCode","handlePromptSubmit","prompt","res","post","data","code","err","console","error","maxWidth","children","variant","sx","mt","mb","fileName","_jsxFileName","lineNumber","columnNumber","onHeadersExtracted","onSubmit","elevation","p","whiteSpace","fontFamily","_c","$RefreshReg$"],"sources":["C:/Users/DELL/OneDrive/Desktop/mml/client/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport FileUpload from './FileUpload';\r\nimport PromptInput from './components/';\r\nimport { Container, Typography, Paper } from '@mui/material';\r\nimport axios from 'axios';\r\n\r\nconst App = () => {\r\n  const [headers, setHeaders] = useState([]);\r\n  const [generatedCode, setGeneratedCode] = useState('');\r\n\r\n  const handlePromptSubmit = async (prompt) => {\r\n    try {\r\n      const res = await axios.post('http://localhost:5000/generate-code', {\r\n        prompt,\r\n        headers,\r\n      });\r\n      setGeneratedCode(res.data.code || 'No code returned.');\r\n    } catch (err) {\r\n      console.error('Error generating code:', err);\r\n      setGeneratedCode('Error generating code.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"md\">\r\n      <Typography variant=\"h4\" sx={{ mt: 4, mb: 2 }}>\r\n        ðŸ§  Prompt2LLM â€“ ML Code Generator\r\n      </Typography>\r\n      <FileUpload onHeadersExtracted={setHeaders} />\r\n      <PromptInput onSubmit={handlePromptSubmit} />\r\n      {generatedCode && (\r\n        <Paper elevation={3} sx={{ mt: 4, p: 3, whiteSpace: 'pre-wrap', fontFamily: 'monospace' }}>\r\n          {generatedCode}\r\n        </Paper>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,WAAW,MAAM,eAAe;AACvC,SAASC,SAAS,EAAEC,UAAU,EAAEC,KAAK,QAAQ,eAAe;AAC5D,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACa,aAAa,EAAEC,gBAAgB,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAMe,kBAAkB,GAAG,MAAOC,MAAM,IAAK;IAC3C,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMX,KAAK,CAACY,IAAI,CAAC,qCAAqC,EAAE;QAClEF,MAAM;QACNL;MACF,CAAC,CAAC;MACFG,gBAAgB,CAACG,GAAG,CAACE,IAAI,CAACC,IAAI,IAAI,mBAAmB,CAAC;IACxD,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEF,GAAG,CAAC;MAC5CP,gBAAgB,CAAC,wBAAwB,CAAC;IAC5C;EACF,CAAC;EAED,oBACEN,OAAA,CAACL,SAAS;IAACqB,QAAQ,EAAC,IAAI;IAAAC,QAAA,gBACtBjB,OAAA,CAACJ,UAAU;MAACsB,OAAO,EAAC,IAAI;MAACC,EAAE,EAAE;QAAEC,EAAE,EAAE,CAAC;QAAEC,EAAE,EAAE;MAAE,CAAE;MAAAJ,QAAA,EAAC;IAE/C;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eACbzB,OAAA,CAACP,UAAU;MAACiC,kBAAkB,EAAEtB;IAAW;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9CzB,OAAA,CAACN,WAAW;MAACiC,QAAQ,EAAEpB;IAAmB;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAC5CpB,aAAa,iBACZL,OAAA,CAACH,KAAK;MAAC+B,SAAS,EAAE,CAAE;MAACT,EAAE,EAAE;QAAEC,EAAE,EAAE,CAAC;QAAES,CAAC,EAAE,CAAC;QAAEC,UAAU,EAAE,UAAU;QAAEC,UAAU,EAAE;MAAY,CAAE;MAAAd,QAAA,EACvFZ;IAAa;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CAAC;AAEhB,CAAC;AAACvB,EAAA,CA/BID,GAAG;AAAA+B,EAAA,GAAH/B,GAAG;AAiCT,eAAeA,GAAG;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}