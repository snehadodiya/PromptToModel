{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\OneDrive\\\\Desktop\\\\mml\\\\client\\\\src\\\\components\\\\PromptInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, TextField, Button, Typography } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PromptInput = ({\n  onSubmit\n}) => {\n  _s();\n  const [prompt, setPrompt] = useState('');\n  const handlePromptSubmit = async (prompt, sessionId) => {\n    try {\n      const res = await axios.post('http://localhost:5000/generate-code', {\n        prompt,\n        headers,\n        sessionId\n      });\n      setGeneratedCode(res.data.code || 'No code returned.');\n    } catch (err) {\n      console.error('Error generating code:', err);\n      setGeneratedCode('Error generating code.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      mt: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: \"Describe your ML task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      fullWidth: true,\n      multiline: true,\n      minRows: 3,\n      placeholder: \"e.g. Build a classification model to predict churn\",\n      value: prompt,\n      onChange: e => setPrompt(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      sx: {\n        mt: 2\n      },\n      onClick: handleSubmit,\n      children: \"Generate ML Code\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(PromptInput, \"S1lK4b8P240vr4GGWfaaSHACfl0=\");\n_c = PromptInput;\nexport default PromptInput;\nvar _c;\n$RefreshReg$(_c, \"PromptInput\");","map":{"version":3,"names":["React","useState","Box","TextField","Button","Typography","jsxDEV","_jsxDEV","PromptInput","onSubmit","_s","prompt","setPrompt","handlePromptSubmit","sessionId","res","axios","post","headers","setGeneratedCode","data","code","err","console","error","sx","mt","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","fullWidth","multiline","minRows","placeholder","value","onChange","e","target","color","onClick","handleSubmit","_c","$RefreshReg$"],"sources":["C:/Users/DELL/OneDrive/Desktop/mml/client/src/components/PromptInput.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Box, TextField, Button, Typography } from '@mui/material';\r\n\r\nconst PromptInput = ({ onSubmit }) => {\r\n  const [prompt, setPrompt] = useState('');\r\n\r\n  \r\nconst handlePromptSubmit = async (prompt, sessionId) => {\r\n  try {\r\n    const res = await axios.post('http://localhost:5000/generate-code', {\r\n      prompt,\r\n      headers,\r\n      sessionId,\r\n    });\r\n    setGeneratedCode(res.data.code || 'No code returned.');\r\n  } catch (err) {\r\n    console.error('Error generating code:', err);\r\n    setGeneratedCode('Error generating code.');\r\n  }\r\n};\r\n\r\n\r\n  return (\r\n    <Box sx={{ mt: 4 }}>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Describe your ML task\r\n      </Typography>\r\n      <TextField\r\n        fullWidth\r\n        multiline\r\n        minRows={3}\r\n        placeholder=\"e.g. Build a classification model to predict churn\"\r\n        value={prompt}\r\n        onChange={(e) => setPrompt(e.target.value)}\r\n      />\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"secondary\"\r\n        sx={{ mt: 2 }}\r\n        onClick={handleSubmit}\r\n      >\r\n        Generate ML Code\r\n      </Button>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PromptInput;\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,GAAG,EAAEC,SAAS,EAAEC,MAAM,EAAEC,UAAU,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACpC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAG1C,MAAMY,kBAAkB,GAAG,MAAAA,CAAOF,MAAM,EAAEG,SAAS,KAAK;IACtD,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAACC,IAAI,CAAC,qCAAqC,EAAE;QAClEN,MAAM;QACNO,OAAO;QACPJ;MACF,CAAC,CAAC;MACFK,gBAAgB,CAACJ,GAAG,CAACK,IAAI,CAACC,IAAI,IAAI,mBAAmB,CAAC;IACxD,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEF,GAAG,CAAC;MAC5CH,gBAAgB,CAAC,wBAAwB,CAAC;IAC5C;EACF,CAAC;EAGC,oBACEZ,OAAA,CAACL,GAAG;IAACuB,EAAE,EAAE;MAAEC,EAAE,EAAE;IAAE,CAAE;IAAAC,QAAA,gBACjBpB,OAAA,CAACF,UAAU;MAACuB,OAAO,EAAC,IAAI;MAACC,YAAY;MAAAF,QAAA,EAAC;IAEtC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eACb1B,OAAA,CAACJ,SAAS;MACR+B,SAAS;MACTC,SAAS;MACTC,OAAO,EAAE,CAAE;MACXC,WAAW,EAAC,oDAAoD;MAChEC,KAAK,EAAE3B,MAAO;MACd4B,QAAQ,EAAGC,CAAC,IAAK5B,SAAS,CAAC4B,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC,eACF1B,OAAA,CAACH,MAAM;MACLwB,OAAO,EAAC,WAAW;MACnBc,KAAK,EAAC,WAAW;MACjBjB,EAAE,EAAE;QAAEC,EAAE,EAAE;MAAE,CAAE;MACdiB,OAAO,EAAEC,YAAa;MAAAjB,QAAA,EACvB;IAED;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACvB,EAAA,CA1CIF,WAAW;AAAAqC,EAAA,GAAXrC,WAAW;AA4CjB,eAAeA,WAAW;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}